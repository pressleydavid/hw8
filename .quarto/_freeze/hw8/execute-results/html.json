{
  "hash": "844936204e4cb1d1e7c7b2ca3fe17c6c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"hw8\"\nformat: html\neditor: visual\n---\n\n\n\n## Homwwork 8\n\n\n::: {.cell}\n\n:::\n\n\n\n### Read Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsoul_bikes <- read_csv(\"https://www4.stat.ncsu.edu/~online/datasets/SeoulBikeData.csv\",\n                        locale = locale(encoding = \"latin1\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 8760 Columns: 14\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Date, Seasons, Holiday, Functioning Day\ndbl (10): Rented Bike Count, Hour, Temperature(°C), Humidity(%), Wind speed ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(soul_bikes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Date\"                      \"Rented Bike Count\"        \n [3] \"Hour\"                      \"Temperature(°C)\"          \n [5] \"Humidity(%)\"               \"Wind speed (m/s)\"         \n [7] \"Visibility (10m)\"          \"Dew point temperature(°C)\"\n [9] \"Solar Radiation (MJ/m2)\"   \"Rainfall(mm)\"             \n[11] \"Snowfall (cm)\"             \"Seasons\"                  \n[13] \"Holiday\"                   \"Functioning Day\"          \n```\n\n\n:::\n\n```{.r .cell-code}\n#Transform:\n#- dates to datetime formats\n#- snake_case vars\n# Clean and transform the data\nsoul_bikes_clean <- soul_bikes |>\n  clean_names() |>  # This will convert \"Functioning Day\" to \"functioning_day\"\n  mutate(\n    date = dmy(date),\n    seasons = as.factor(seasons),\n    holiday = as.factor(holiday),\n    functioning_day = as.factor(functioning_day)\n  )\n\n\n# Check column names to verify\nnames(soul_bikes_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"date\"                    \"rented_bike_count\"      \n [3] \"hour\"                    \"temperature_c\"          \n [5] \"humidity_percent\"        \"wind_speed_m_s\"         \n [7] \"visibility_10m\"          \"dew_point_temperature_c\"\n [9] \"solar_radiation_mj_m2\"   \"rainfall_mm\"            \n[11] \"snowfall_cm\"             \"seasons\"                \n[13] \"holiday\"                 \"functioning_day\"        \n```\n\n\n:::\n\n```{.r .cell-code}\n# Then filter\nsoul_bikes_functioning <- soul_bikes_clean[soul_bikes_clean$functioning_day == \"Yes\", ]\n```\n:::\n\n\n\n## Basic EDA\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Basic EDA\n#Missing values\nmissing_summ <- soul_bikes |>\n  summarize(across(everything(), \\(x) sum(is.na(x)))) |>\n  pivot_longer(everything(),\n                names_to = \"variable\",\n                values_to = \"missing_count\")\nmissing_summ\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 14 × 2\n   variable                  missing_count\n   <chr>                             <int>\n 1 Date                                  0\n 2 Rented Bike Count                     0\n 3 Hour                                  0\n 4 Temperature(°C)                       0\n 5 Humidity(%)                           0\n 6 Wind speed (m/s)                      0\n 7 Visibility (10m)                      0\n 8 Dew point temperature(°C)             0\n 9 Solar Radiation (MJ/m2)               0\n10 Rainfall(mm)                          0\n11 Snowfall (cm)                         0\n12 Seasons                               0\n13 Holiday                               0\n14 Functioning Day                       0\n```\n\n\n:::\n\n```{.r .cell-code}\n#By variable summary stats for numerics\nbike_summ_nums <- soul_bikes_functioning |>\n  select(where(is.numeric)) |>\n  summarize(across(everything(),\n                   list(\n                     mean = \\(x) mean(x, na.rm = TRUE),\n                     sd = \\(x) sd(x, na.rm = TRUE),\n                     median = \\(x) median(x, na.rm = TRUE),\n                     iqr = \\(x) IQR(x, na.rm = TRUE),\n                     min = \\(x) min(x, na.rm = TRUE),\n                     max = \\(x) max(x, na.rm = TRUE),\n                     n_missing = \\(x) sum(is.na(x))\n                   ))) |>\n              pivot_longer(\n                everything(),\n                names_to = c(\"column\", \"stat\"),\n                names_pattern = \"(.*)_(.*)\",\n                values_to = \"values\"\n              )\n\n#By variable summary stats for character/factor\nbike_summ_cats <- soul_bikes_functioning |>\n  select(where(is.character), where(is.factor)) |>\n  summarize(across(everything(),\n    list(\n      n_unique = \\(x) n_distinct(x),\n      n_missing = \\(x) sum(is.na(x))\n    )\n  )) |>\n  pivot_longer(\n    everything(),\n    names_to = c(\"column\", \"stat\"),\n    names_pattern = \"(.*)_(.*)\",\n    values_to = \"value\"\n  )\n\n# Factor levels summary\nfactor_levels <- soul_bikes_functioning |>\n  select(where(is.factor), where(is.character)) |>\n  summarize(across(everything(), \\(x) list(sort(unique(x))))) |>\n  pivot_longer(\n    everything(),\n    names_to = \"column\",\n    values_to = \"levels\"\n  ) |>\n  mutate(\n    n_levels = map_int(levels, length),\n    levels = map_chr(levels, toString)\n  )\n\n#7. Summarize across hours\ndaily_summ <- soul_bikes_functioning |>\n  group_by(date, seasons, holiday) |>\n  summarize(\n    #totals\n    total_bikes = sum(rented_bike_count),\n    total_rainfall = sum(rainfall_mm),\n    total_snowfall = sum(snowfall_cm),\n\n    #weather means\n    avg_temp = mean(temperature_c),\n    avg_humidity = mean(humidity_percent),\n    avg_wind_speed = mean(wind_speed_m_s),\n    avg_visibility = mean(visibility_10m),\n    avg_dew_point = mean(dew_point_temperature_c),\n    avg_solar_rad = mean(solar_radiation_mj_m2),\n    .groups = \"drop\"  # Drop grouping after summary\n  )\ndaily_summ\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 353 × 12\n   date       seasons holiday total_bikes total_rainfall total_snowfall avg_temp\n   <date>     <fct>   <fct>         <dbl>          <dbl>          <dbl>    <dbl>\n 1 2017-12-01 Winter  No Hol…        9539            0              0    -2.45  \n 2 2017-12-02 Winter  No Hol…        8523            0              0     1.32  \n 3 2017-12-03 Winter  No Hol…        7222            4              0     4.88  \n 4 2017-12-04 Winter  No Hol…        8729            0.1            0    -0.304 \n 5 2017-12-05 Winter  No Hol…        8307            0              0    -4.46  \n 6 2017-12-06 Winter  No Hol…        6669            1.3            8.6   0.0458\n 7 2017-12-07 Winter  No Hol…        8549            0             10.4   1.09  \n 8 2017-12-08 Winter  No Hol…        8032            0              0    -3.82  \n 9 2017-12-09 Winter  No Hol…        7233            0              0    -0.846 \n10 2017-12-10 Winter  No Hol…        3453            4.1           32.5   1.19  \n# ℹ 343 more rows\n# ℹ 5 more variables: avg_humidity <dbl>, avg_wind_speed <dbl>,\n#   avg_visibility <dbl>, avg_dew_point <dbl>, avg_solar_rad <dbl>\n```\n\n\n:::\n\n```{.r .cell-code}\n#Summaries of numerics\nbike_summ_nums <- daily_summ |>\n  select(where(is.numeric)) |>\n  summarize(across(everything(),\n                   list(\n                     mean = \\(x) mean(x, na.rm = TRUE),\n                     sd = \\(x) sd(x, na.rm = TRUE),\n                     median = \\(x) median(x, na.rm = TRUE),\n                     iqr = \\(x) IQR(x, na.rm = TRUE),\n                     min = \\(x) min(x, na.rm = TRUE),\n                     max = \\(x) max(x, na.rm = TRUE),\n                     n_missing = \\(x) sum(is.na(x))\n                   ))) |>\n  pivot_longer(\n    everything(),\n    names_to = c(\"column\", \"stat\"),\n    names_pattern = \"(.*)_(.*)\",\n    values_to = \"values\"\n  )\nbike_summ_nums\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 63 × 3\n   column         stat      values\n   <chr>          <chr>      <dbl>\n 1 total_bikes    mean    17485.  \n 2 total_bikes    sd       9937.  \n 3 total_bikes    median  18563   \n 4 total_bikes    iqr     19318   \n 5 total_bikes    min       977   \n 6 total_bikes    max     36149   \n 7 total_bikes_n  missing     0   \n 8 total_rainfall mean        3.58\n 9 total_rainfall sd         11.8 \n10 total_rainfall median      0   \n# ℹ 53 more rows\n```\n\n\n:::\n:::\n\n\n\n\n### Plots \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate correlation matrix\ncor_matrix <- daily_summ |>\n  select(total_bikes, avg_temp, avg_humidity, avg_wind_speed,\n         avg_visibility, avg_solar_rad, total_rainfall, total_snowfall) |>\n  cor(use = \"complete.obs\")\ncor_matrix\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n               total_bikes     avg_temp avg_humidity avg_wind_speed\ntotal_bikes     1.00000000  0.753076732   0.03588697    -0.19288142\navg_temp        0.75307673  1.000000000   0.40416749    -0.26072179\navg_humidity    0.03588697  0.404167486   1.00000000    -0.23425778\navg_wind_speed -0.19288142 -0.260721792  -0.23425778     1.00000000\navg_visibility  0.16599375  0.002336683  -0.55917733     0.20602264\navg_solar_rad   0.73589290  0.550274301  -0.27444967     0.09612635\ntotal_rainfall -0.23910905  0.144517274   0.52864263    -0.10167578\ntotal_snowfall -0.26529110 -0.266963662   0.06539191     0.02088156\n               avg_visibility avg_solar_rad total_rainfall total_snowfall\ntotal_bikes       0.165993749    0.73589290    -0.23910905    -0.26529110\navg_temp          0.002336683    0.55027430     0.14451727    -0.26696366\navg_humidity     -0.559177334   -0.27444967     0.52864263     0.06539191\navg_wind_speed    0.206022636    0.09612635    -0.10167578     0.02088156\navg_visibility    1.000000000    0.27139591    -0.22199387    -0.10188902\navg_solar_rad     0.271395906    1.00000000    -0.32270413    -0.23343056\ntotal_rainfall   -0.221993866   -0.32270413     1.00000000    -0.02313404\ntotal_snowfall   -0.101889019   -0.23343056    -0.02313404     1.00000000\n```\n\n\n:::\n\n```{.r .cell-code}\n# Create correlation plot\ncorrplot(cor_matrix,\n         method = \"color\",\n         type = \"upper\",\n         addCoef.col = \"black\",\n         tl.col = \"black\",\n         tl.srt = 45,\n         diag = FALSE)\n```\n\n::: {.cell-output-display}\n![](hw8_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Individual scatter plots with trend lines\ntemp_v_rentals <- ggplot(daily_summ, aes(x = avg_temp, y = total_bikes)) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(method = \"loess\", color = \"red\") +\n  labs(title = \"Temperature vs Bike Rentals\",\n       x = \"Average Temperature (°C)\",\n       y = \"Total Daily Rentals\") +\n  theme_minimal()\n\nhumid_v_rentals <- ggplot(daily_summ, aes(x = avg_humidity, y = total_bikes)) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(method = \"loess\", color = \"blue\") +\n  labs(title = \"Humidity vs Bike Rentals\",\n       x = \"Average Humidity (%)\",\n       y = \"Total Daily Rentals\") +\n  theme_minimal()\n\nsun_v_rentals <- ggplot(daily_summ, aes(x = avg_solar_rad, y = total_bikes)) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(method = \"loess\", color = \"orange\") +\n  labs(title = \"Solar Radiation vs Bike Rentals\",\n       x = \"Average Solar Radiation (MJ/m2)\",\n       y = \"Total Daily Rentals\") +\n  theme_minimal()\n\nvis_v_rentals <- ggplot(daily_summ, aes(x = avg_visibility, y = total_bikes)) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(method = \"loess\", color = \"green4\") +\n  labs(title = \"Visibility vs Bike Rentals\",\n       x = \"Average Visibility (10m)\",\n       y = \"Total Daily Rentals\") +\n  theme_minimal()\n\n# Arrange plots in a grid\n\ngrid.arrange(temp_v_rentals, humid_v_rentals, sun_v_rentals, vis_v_rentals, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](hw8_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n:::\n\n\n\n\n## MLR \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Split the data\nset.seed(123)\nbike_split <- initial_split(daily_summ,\n                            prop = 0.75,\n                            strata = seasons)\n\ntrn <- training(bike_split)\ntst <- testing(bike_split)\nfolds <- vfold_cv(trn, v = 10, strata = seasons)\n\n\n#Fitting MLR Models\n#Recipe 1\nrecipe_1 <- recipe(total_bikes ~ ., data = trn) |>\n  update_role(date, new_role = \"ID\") |>\n  # Extract day of week and create weekend factor\n  step_date(date, features = \"dow\") |>\n  step_mutate(\n    weekend = factor(\n      if_else(date_dow %in% c(\"Sat\", \"Sun\"), \"weekend\", \"weekday\"),\n      levels = c(\"weekday\", \"weekend\")  # explicitly set levels\n    )\n  ) |>\n  # Remove the intermediate date_dow variable\n  step_rm(date_dow) |>\n  # Standardize numeric variables\n  step_normalize(all_numeric_predictors()) |>\n  # Create dummy variables\n  step_dummy(all_nominal_predictors())\n\n\nrecipe_1 |>\n  prep() |>\n  bake(new_data = NULL) |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 263\nColumns: 15\n$ date               <date> 2018-09-05, 2018-09-06, 2018-09-07, 2018-09-08, 20…\n$ total_rainfall     <dbl> -0.2970185, -0.2970185, -0.1773679, -0.2970185, -0.…\n$ total_snowfall     <dbl> -0.2179228, -0.2179228, -0.2179228, -0.2179228, -0.…\n$ avg_temp           <dbl> 0.942813132, 0.977863864, 0.800131869, 0.760478516,…\n$ avg_humidity       <dbl> 0.21420205, 0.81794255, -0.11561916, -0.66625286, -…\n$ avg_wind_speed     <dbl> 1.32331031, 0.28870706, 1.28079237, -0.10104074, -0…\n$ avg_visibility     <dbl> 1.05187245, 0.41451440, 0.84111295, 1.10774745, 1.1…\n$ avg_dew_point      <dbl> 0.87630133, 1.09270791, 0.66181269, 0.44380783, 0.4…\n$ avg_solar_rad      <dbl> 1.17578189, -0.32588618, 0.79740883, 1.21388195, 1.…\n$ total_bikes        <dbl> 31114, 27838, 30381, 29813, 28354, 30781, 31809, 30…\n$ seasons_Spring     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ seasons_Summer     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ seasons_Winter     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ holiday_No.Holiday <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, …\n$ weekend_weekend    <dbl> 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, …\n```\n\n\n:::\n\n```{.r .cell-code}\n#Recipe 2\nrecipe_2 <- recipe(total_bikes ~ ., data = trn) |>\n  update_role(date, new_role = \"ID\") |>\n  step_date(date, features = \"dow\") |>\n  step_mutate(\n    weekend = factor(\n      if_else(date_dow %in% c(\"Sat\", \"Sun\"), \"weekend\", \"weekday\"),\n      levels = c(\"weekday\", \"weekend\")\n    )\n  ) |>\n  step_rm(date_dow) |>\n  step_normalize(all_numeric_predictors()) |>\n  step_dummy(all_nominal_predictors()) |>\n  # Changed interaction syntax to use explicit formulas\n  step_interact(terms = ~ starts_with(\"seasons_\"):starts_with(\"holiday_\")) |>\n  step_interact(terms = ~ starts_with(\"seasons_\"):avg_temp) |>\n  step_interact(terms = ~ total_rainfall:avg_temp)\n\nrecipe_2 |>\n  prep() |>\n  bake(new_data = NULL) |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 263\nColumns: 25\n$ date                                           <date> 2018-09-05, 2018-09-06…\n$ total_rainfall                                 <dbl> -0.2970185, -0.2970185,…\n$ total_snowfall                                 <dbl> -0.2179228, -0.2179228,…\n$ avg_temp                                       <dbl> 0.942813132, 0.97786386…\n$ avg_humidity                                   <dbl> 0.21420205, 0.81794255,…\n$ avg_wind_speed                                 <dbl> 1.32331031, 0.28870706,…\n$ avg_visibility                                 <dbl> 1.05187245, 0.41451440,…\n$ avg_dew_point                                  <dbl> 0.87630133, 1.09270791,…\n$ avg_solar_rad                                  <dbl> 1.17578189, -0.32588618…\n$ total_bikes                                    <dbl> 31114, 27838, 30381, 29…\n$ seasons_Spring                                 <dbl> 0, 0, 0, 0, 0, 0, 0, 0,…\n$ seasons_Summer                                 <dbl> 0, 0, 0, 0, 0, 0, 0, 0,…\n$ seasons_Winter                                 <dbl> 0, 0, 0, 0, 0, 0, 0, 0,…\n$ holiday_No.Holiday                             <dbl> 1, 1, 1, 1, 1, 1, 1, 1,…\n$ weekend_weekend                                <dbl> 0, 0, 0, 1, 1, 0, 0, 0,…\n$ seasons_Spring_x_holiday_No.Holiday            <dbl> 0, 0, 0, 0, 0, 0, 0, 0,…\n$ seasons_Summer_x_holiday_No.Holiday            <dbl> 0, 0, 0, 0, 0, 0, 0, 0,…\n$ seasons_Winter_x_holiday_No.Holiday            <dbl> 0, 0, 0, 0, 0, 0, 0, 0,…\n$ seasons_Spring_x_avg_temp                      <dbl> 0, 0, 0, 0, 0, 0, 0, 0,…\n$ seasons_Summer_x_avg_temp                      <dbl> 0, 0, 0, 0, 0, 0, 0, 0,…\n$ seasons_Winter_x_avg_temp                      <dbl> 0, 0, 0, 0, 0, 0, 0, 0,…\n$ seasons_Spring_x_holiday_No.Holiday_x_avg_temp <dbl> 0, 0, 0, 0, 0, 0, 0, 0,…\n$ seasons_Summer_x_holiday_No.Holiday_x_avg_temp <dbl> 0, 0, 0, 0, 0, 0, 0, 0,…\n$ seasons_Winter_x_holiday_No.Holiday_x_avg_temp <dbl> 0, 0, 0, 0, 0, 0, 0, 0,…\n$ total_rainfall_x_avg_temp                      <dbl> -0.280032902, -0.290443…\n```\n\n\n:::\n\n```{.r .cell-code}\n#Recipe 3\n\nrecipe_3 <- recipe(total_bikes ~ ., data = trn) |>\n  update_role(date, new_role = \"ID\") |>\n  step_date(date, features = \"dow\") |>\n  step_mutate(\n    weekend = factor(\n      if_else(date_dow %in% c(\"Sat\", \"Sun\"), \"weekend\", \"weekday\"),\n      levels = c(\"weekday\", \"weekend\")\n    )\n  ) |>\n  step_rm(date_dow) |>\n  step_normalize(all_numeric_predictors()) |>\n  step_dummy(all_nominal_predictors()) |>\n  # Modify interaction specification to use separate terms=\n  step_interact(terms = ~ starts_with(\"seasons_\") * starts_with(\"holiday_\") +\n                  starts_with(\"seasons_\") * avg_temp +\n                  total_rainfall * avg_temp) |>\n  step_poly(total_rainfall, avg_temp, avg_humidity, avg_wind_speed,\n            avg_visibility, avg_dew_point, avg_solar_rad,\n            degree = 2)\n# Let's verify it works\nrecipe_3 |>\n  prep() |>\n  bake(new_data = NULL) |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 263\nColumns: 29\n$ date                                <date> 2018-09-05, 2018-09-06, 2018-09-0…\n$ total_snowfall                      <dbl> -0.2179228, -0.2179228, -0.2179228…\n$ total_bikes                         <dbl> 31114, 27838, 30381, 29813, 28354,…\n$ seasons_Spring                      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ seasons_Summer                      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ seasons_Winter                      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ holiday_No.Holiday                  <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ weekend_weekend                     <dbl> 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0…\n$ seasons_Spring_x_holiday_No.Holiday <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ seasons_Summer_x_holiday_No.Holiday <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ seasons_Winter_x_holiday_No.Holiday <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ seasons_Spring_x_avg_temp           <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ seasons_Summer_x_avg_temp           <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ seasons_Winter_x_avg_temp           <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ avg_temp_x_total_rainfall           <dbl> -0.280032902, -0.290443616, -0.141…\n$ total_rainfall_poly_1               <dbl> -0.018349862, -0.018349862, -0.010…\n$ total_rainfall_poly_2               <dbl> 0.017787545, 0.017787545, -0.00247…\n$ avg_temp_poly_1                     <dbl> 0.0582471898, 0.0604126312, 0.0494…\n$ avg_temp_poly_2                     <dbl> 4.343638e-03, 8.936806e-03, -1.277…\n$ avg_humidity_poly_1                 <dbl> 0.013233447, 0.050532660, -0.00714…\n$ avg_humidity_poly_2                 <dbl> -0.049710700, -0.025703529, -0.047…\n$ avg_wind_speed_poly_1               <dbl> 0.081754384, 0.017836382, 0.079127…\n$ avg_wind_speed_poly_2               <dbl> -0.022889314, -0.051814842, -0.025…\n$ avg_visibility_poly_1               <dbl> 0.064984897, 0.025608785, 0.051964…\n$ avg_visibility_poly_2               <dbl> 0.052485925, -0.039054487, 0.01602…\n$ avg_dew_point_poly_1                <dbl> 0.054138077, 0.067507720, 0.040886…\n$ avg_dew_point_poly_2                <dbl> 0.0010118908, 0.0310969311, -0.023…\n$ avg_solar_rad_poly_1                <dbl> 0.072640048, -0.020133316, 0.04926…\n$ avg_solar_rad_poly_2                <dbl> 0.008080770, -0.053656723, -0.0353…\n```\n\n\n:::\n\n```{.r .cell-code}\n#setup LM engine\n# Set up linear model specification\nlm_spec <- linear_reg() |>\n  set_engine(\"lm\")\n\n# Create workflows for each recipe\nworkflow_1 <- workflow() |>\n  add_recipe(recipe_1) |>\n  add_model(lm_spec)\n\nworkflow_2 <- workflow() |>\n  add_recipe(recipe_2) |>\n  add_model(lm_spec)\n\nworkflow_3 <- workflow() |>\n  add_recipe(recipe_3) |>\n  add_model(lm_spec)\n\n# Fit models using 10-fold CV\ncv_fit_1 <- workflow_1 |>\n  fit_resamples(\n    resamples = folds,\n    metrics = metric_set(rmse)\n  )\n\ncv_fit_2 <- workflow_2 |>\n  fit_resamples(\n    resamples = folds,\n    metrics = metric_set(rmse)\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n→ A | warning: prediction from rank-deficient fit; consider predict(., rankdeficient=\"NA\")\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThere were issues with some computations   A: x1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThere were issues with some computations   A: x10\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\n```\n\n\n:::\n\n```{.r .cell-code}\ncv_fit_3 <- workflow_3 |>\n  fit_resamples(\n    resamples = folds,\n    metrics = metric_set(rmse)\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n→ A | warning: prediction from rank-deficient fit; consider predict(., rankdeficient=\"NA\")\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThere were issues with some computations   A: x1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThere were issues with some computations   A: x2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\n```\n\n\n:::\n\n```{.r .cell-code}\n# Compare CV results\ncv_results <- bind_rows(\n  collect_metrics(cv_fit_1) |> mutate(model = \"Model 1\"),\n  collect_metrics(cv_fit_2) |> mutate(model = \"Model 2\"),\n  collect_metrics(cv_fit_3) |> mutate(model = \"Model 3\")\n) |>\n  arrange(mean)\n\nprint(cv_results)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 7\n  .metric .estimator  mean     n std_err .config              model  \n  <chr>   <chr>      <dbl> <int>   <dbl> <chr>                <chr>  \n1 rmse    standard   2946.    10    236. Preprocessor1_Model1 Model 3\n2 rmse    standard   3460.    10    475. Preprocessor1_Model1 Model 2\n3 rmse    standard   4151.    10    150. Preprocessor1_Model1 Model 1\n```\n\n\n:::\n\n```{.r .cell-code}\n#Model 3 is best fit\n# Use last_fit with the best model (Model 3)\nfinal_fit <- workflow_3 |>\n  last_fit(bike_split)\n\n# Get test set metrics\ncollect_metrics(final_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  <chr>   <chr>          <dbl> <chr>               \n1 rmse    standard    2913.    Preprocessor1_Model1\n2 rsq     standard       0.919 Preprocessor1_Model1\n```\n\n\n:::\n\n```{.r .cell-code}\n# Get coefficients\nfinal_fit |>\n  extract_fit_parsnip() |>\n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 28 × 5\n   term                                estimate std.error statistic  p.value\n   <chr>                                  <dbl>     <dbl>     <dbl>    <dbl>\n 1 (Intercept)                           15335.     2200.     6.97  3.17e-11\n 2 total_snowfall                         -152.      215.    -0.707 4.80e- 1\n 3 seasons_Spring                        -6645.     3740.    -1.78  7.69e- 2\n 4 seasons_Summer                        17050.     3548.     4.81  2.76e- 6\n 5 seasons_Winter                        -7253.     3203.    -2.26  2.45e- 2\n 6 holiday_No.Holiday                     6230.     2074.     3.00  2.96e- 3\n 7 weekend_weekend                       -2445.      394.    -6.20  2.50e- 9\n 8 seasons_Spring_x_holiday_No.Holiday    1843.     3777.     0.488 6.26e- 1\n 9 seasons_Summer_x_holiday_No.Holiday   -2830.     2908.    -0.973 3.31e- 1\n10 seasons_Winter_x_holiday_No.Holiday   -4336.     2470.    -1.76  8.04e- 2\n# ℹ 18 more rows\n```\n\n\n:::\n:::\n",
    "supporting": [
      "hw8_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}